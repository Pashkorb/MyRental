3.1 Регистрация пользователя(Создает пользователя в сервисе пользователей
    , если тот недоступен - откатит транзакцию)
URL: /api/security/register
Метод: POST
Тело запроса:
{
  "login": "Имя пользователя",
  "password": "Пароль",
  "email": "Email пользователя"
}

Ответ при успешной регистрации:
{
  "accessToken": "Сгенерированный access token"
}
Код ответа:
201 Created: При успешной регистрации.
409 Conflict: Если пользователь уже существует.

3.2 Вход в систему (можно отправлять и логин и пароль)
URL: /api/security/login
Метод: POST
Тело запроса:
{
  "identifier": "Имя пользователя",   //логин или почта
  "password": "Пароль"
}

Ответ при успешном входе:
{
  "accessToken": "Сгенерированный access token"
}

Код ответа:
200 OK: При успешном входе.
401 Unauthorized: Если предоставленные учетные данные неверны.

3.3 Обновление токена
URL: /api/security/refresh-token
Метод: POST
Заголовки:
Authorization: Bearer <access token>
Ответ при успешном обновлении:
{
  "accessToken": "Новый access token"
}
Код ответа:
200 OK: При успешном обновлении токена.
401 Unauthorized: Если refresh token недействителен или истек.

3.4 Отправка письма для сброса пароля
Метод: POST
Параметры запроса:
email: Email пользователя
Ответ при успешной отправке:
"Password reset email sent"
Код ответа:
200 OK: Если письмо успешно отправлено.
404 Not Found: Если пользователь с указанным email не найден.

3.5 Сброс пароля
URL: /api/security/reset-password
Метод: POST
Тело запроса:
{
  "token": "Секретный код сброса пароля",
  "newPassword": "Новый пароль",
  "email": "Email пользователя"
}
Ответ при успешном сбросе:
"Password reset successfully"
Код ответа:
200 OK: Если пароль успешно изменен.
400 Bad Request: Если токен недействителен или другие ошибки.
